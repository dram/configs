;;
;; config file for uim
;;
;; vim: ft=scheme
;; 

;; set zhengma to be default im
(define custom-activate-default-im-name? #t)
(define custom-preserved-default-im-name 'zhengma)
(define default-im-name 'zhengma)
(define enabled-im-list '(zhengma))

;; focus to zhengma, disable im switch
(define enable-im-switch? #f)

;; disable candidate window
(define generic-use-candidate-window? #f)

;; disable pref and switcher button in toolbar
(define toolbar-show-pref-button? #f)
(define toolbar-show-switcher-button? #f)

(define toolbar-icon-for-dark-background? #t)

;; switch on and off
(define generic-on-key '("<Control> " "<Shift> "))
(define generic-on-key? (make-key-predicate '("<Control> " "<Shift> ")))
(define generic-off-key '("<Control> " "<Shift> "))
(define generic-off-key? (make-key-predicate '("<Control> " "<Shift> ")))

;; other keys
(define generic-begin-conv-key '(" "))
(define generic-begin-conv-key? (make-key-predicate '(" ")))
(define generic-commit-key '("return" " "))
(define generic-commit-key? (make-key-predicate '("return" " ")))
(define generic-cancel-key '("escape" "<IgnoreCase><Control>c"))
(define generic-cancel-key? (make-key-predicate '("escape" "<IgnoreCase><Control>c")))
(define generic-next-candidate-key '("down" "<IgnoreCase><Control>n"))
(define generic-next-candidate-key? (make-key-predicate '("down" "<IgnoreCase><Control>n")))
(define generic-prev-candidate-key '("up" "<IgnoreCase><Control>p"))
(define generic-prev-candidate-key? (make-key-predicate '("up" "<IgnoreCase><Control>p")))
